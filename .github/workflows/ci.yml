name: Build, Test and Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:
    # HEADコミットが'skip ci'を含んでいれば、ciをキャンセルする。
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest
    timeout-minutes: 30

    # environmentを設定する！
    environment: production
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Restore cache for Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Android Lint
        run: ./gradlew lintDebug

  local-test:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Run Local Unit Test
        run: ./gradlew testDebug

      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Local-Test-Reports
          path: app/build/reports/tests/*
        if: always()

  android-emulator-test:
    runs-on: macos-latest
    needs: build
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        api-level: [ 23, 24, 26, 29, 30 ]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      # JDKのセットアップ
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Restore cache for Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # api-levelによってエミュレータのターゲットを変える。
      # https://docs.github.com/ja/actions/learn-github-actions/workflow-commands-for-github-actions#example
      - name: Set the emulator target name to GITHUB_ENV 
        id: setup_target_name
        run: |
          target="default"
          if [ "${{ matrix.api-level }}" -ge "29" ]; then
            target="google_apis"
          fi
          echo "env_target=$target" >> $GITHUB_ENV
      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ env.env_target }}
          arch: x86
          profile: Galaxy Nexus
          script: ./gradlew connectedCheck --stacktrace

      # テスト結果をアップロードする。
      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Android-Test-Reports-API${{ matrix.api-level }}
          path: app/build/reports
        if: always()

  deploy:
    runs-on: ubuntu-latest
    needs: [ build, local-test, android-emulator-test ]
    timeout-minutes: 10

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      # release.keystoreをデコードする。
      - name: Decode Keystore
        run: echo ${{ secrets.ENCODED_RELEASE_KEYSTORE }} | base64 --decode > ./app/release.keystore

      # aab形式でビルドする。
      - name: Build AAB
        run: ./gradlew :app:bundleRelease
        env:
          RELEASE_KEYSTORE_STORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_STORE_PASSWORD }}
          RELEASE_KEYSTORE_KEY_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_KEY_PASSWORD }}

      - name: Upload aab file
        uses: actions/upload-artifact@v2
        with:
          name: aab
          path: app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: error
          retention-days: 3
